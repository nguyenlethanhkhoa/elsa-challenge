version: '3.8'
services:
    postgres:
        image: postgres
        container_name: postgres
        hostname: postgres
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: research
            POSTGRES_PASSWORD: research
        ports:
            - 5432:5432
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: always

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "2181:2181"
        restart: always

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        hostname: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
            - "9092:9092"
        restart: always

    redis:
        image: redis:latest
        container_name: redis
        hostname: redis
        restart: always
        ports:
            - "6379:6379"

    frontend:
        build:
            context: .
            dockerfile: ./services/frontend/Dockerfile
        image: frontend
        container_name: frontend
        hostname: frontend
        restart: "always"
        ports:
            - "8080:8080"
        volumes:
            - ./services/frontend/src/index.html:/app/src/index.html
            - ./dummy_data.json:/app/src/dummy-data.json

    quiz:
        build:
            context: .
            dockerfile: ./services/quiz/Dockerfile
        image: quiz
        container_name: quiz
        hostname: quiz
        ports:
            - "8000:8000"
        env_file:
            - ./services/quiz/.env
        depends_on:
            - zookeeper
            - postgres
            - kafka
            - redis
        restart: always

    leaderboard:
        build:
            context: .
            dockerfile: ./services/leaderboard/Dockerfile
        image: leaderboard
        container_name: leaderboard
        hostname: leaderboard
        env_file:
            - ./services/leaderboard/.env
        depends_on:
            - zookeeper
            - postgres
            - kafka
            - redis
        restart: always

#    data_saver:
#        build:
#            context: .
#            dockerfile: ./services/data_saver/Dockerfile
#        image: data_saver
#        container_name: data_saver
#        hostname: data_saver
#        ports:
#            - "8000:8000"